   upstream project  {
       server 192.168.32.130:9000;
#      server 127.0.0.1:8084 backup;
#       ip_hash;
           }
   server {
        listen       80;
        server_name www.izzjr.com izzjr.com *.izzjr.com;
       
#配置跳转访问izzjr.com默认跳转到www.izzjr.com域名，没有https的注意修改 
        if ($host != 'www.izzjr.com' ) {
        rewrite ^/(.*)$ https://www.izzjr.com/$1 permanent;
                }

#将所有的http请求跳转到https上
        #rewrite ^(.*)$  https://$host$1 permanent;

         location / {
            proxy_pass http://project;
        #    root   /data/www/html/izzjr;
            index  index.html index.htm;
            proxy_redirect off ;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header HTTP_HOST $server_name;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            client_max_body_size 50m;
            client_body_buffer_size 256k;
            proxy_connect_timeout 5;
            proxy_send_timeout 5;
            proxy_read_timeout 5;
            proxy_buffer_size 256k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_temp_file_write_size 256k;
            proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;
            proxy_max_temp_file_size 128m;
        }
   
        add_header X-Via $server_addr;                #添加头部字段便于我们验证缓存
        add_header X-Cache $upstream_cache_status;    #在使用upstream的时候，可以验证是否命中
     
       location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|css)$ {
            proxy_next_upstream http_502 http_504 error timeout invalid_header;
            proxy_cache cache_one;
            proxy_cache_valid 200 20m;
            proxy_cache_valid 304 10m;
            proxy_cache_valid 301 302 1h;
            proxy_cache_valid any 1m;
            proxy_cache_key $host$uri$is_args$args;
            proxy_set_header Host  $host;
            proxy_set_header X-Forwarded-For  $remote_addr;
            proxy_pass http://project;
        }
      
        #用于清除缓存，假设一个URL为http://tomcat.lingbug.com/docs/index.html，通过访问http://tomcat.lingbug.com/purge/docs/index.html就可以清除该URL的缓存。
        location ~ /purge(/.*) {
        allow 192.168.32.1;
        deny  all;
        proxy_cache_purge cache_one $host$1$is_args$args;
        }

        #扩展名以.js、.html、.cgi结尾的动态应用程序不缓存。
        location ~ .*\.(js|html|cgi)?$\ {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_pass http://project;
        }
        
		#50x错误页面定制
		error_page   500 502 503 504  /50x.html;
            location = /50x.html {
            root   html/50x;
        }
		#404错误页定制
		#error_page  404              /404.html;
		
        location /status {         #这个是对应的查看nginx目前的连接数状态
            stub_status on;
            allow 192.168.32.1; 
            deny all;
        }
     

     #   rewrite ^/about.html https://$server_name$uri permanent;
     #   rewrite ^/index.html https://$server_name$uri permanent;
        
     #   location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ {
     #			expires      1d;
     #   }

     #    location ~ .*\.(js|css)?$ {
     #			expires      12h;
     #   }
	
     }


    server {
        listen       443 ssl;
        server_name  www.izzjr.com;
      #  rewrite ^/login.html http://$server_name$uri permanent;
        ssl                  on;
        ssl_certificate      /usr/local/nginx/conf/csr/www.izzjr.com.crt;
        ssl_certificate_key  /usr/local/nginx/conf/csr/www.izzjr.com.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        add_header X-Via $server_addr;
        add_header X-Cache $upstream_cache_status;
        location / {
            root   /data/www/html/izzjr;
            index  index.html index.htm;
        }
    }

